{"componentChunkName":"component---src-templates-blog-post-js","path":"/2006/2006-04-17-astar/","result":{"data":{"site":{"siteMetadata":{"title":"Fan's life"}},"markdownRemark":{"id":"6f240295-ece6-58f6-b653-b87c0aa6e688","excerpt":"经过了几天的测试，排除了几个小 Bug，现在的算法已经是很稳定了。性能大概是以前的三倍左右，最终的结果是只用上了设置状态的优化方法，其他方法都没用到。 之前会快 20 倍是因为新算法忘了做 clear，加上以后就是现在这个样子，大概是以前 3 倍的速度。以前的算法之所以慢主要是使用标准模板库里的 map…","html":"<p>经过了几天的测试，排除了几个小 Bug，现在的算法已经是很稳定了。性能大概是以前的三倍左右，最终的结果是只用上了设置状态的优化方法，其他方法都没用到。</p>\n<p>之前会快 20 倍是因为新算法忘了做 clear，加上以后就是现在这个样子，大概是以前 3 倍的速度。以前的算法之所以慢主要是使用标准模板库里的 map 容器，这个容器在 clear 时的速度非常慢，不得已还是改回 vector，clear 的速度很快。</p>\n<p>然后由于节点结构里使用了状态标志直接表示是否开放或者关闭或者未处理，就可以省去一个关闭表（开放表不能省，因为要从开放表里选出 f 最小的节点，直接使用标准库里的 min_element 算法就挺快的了。</p>\n<p>因为是 vector，如果排序的话性能下降比较多，但是用 list 容器 clear 的速度更慢，目前只有使用 vector，除非以后自己写一个排序性能好，clear 速度也快的容器替代），算是比较满意了。</p>","frontmatter":{"title":"终于明白了为什么新写的A*算法会快那么多","date":"April 17, 2006","description":null}},"previous":{"fields":{"slug":"/2006/2006-04-11-cpp-template/"},"frontmatter":{"title":"模板有那么快么？？"}},"next":{"fields":{"slug":"/2006/2006-05-26-ace/"},"frontmatter":{"title":"计划用ACE写一个服务器"}}},"pageContext":{"id":"6f240295-ece6-58f6-b653-b87c0aa6e688","previousPostId":"4e02462b-9190-5034-8bb7-a17af89cdb32","nextPostId":"32b548d5-a523-5328-8ced-91ab0084d798"}},"staticQueryHashes":["2841359383","916993862"]}