{"componentChunkName":"component---src-templates-blog-post-js","path":"/2006/2006-04-11-astar/","result":{"data":{"site":{"siteMetadata":{"title":"Fan's life"}},"mdx":{"id":"c83713ea-6673-58e6-bf30-197c35f41f3e","excerpt":"根据《人工智能游戏编程真言》的提示，分别尝试了几种优化方式，比如： 在节点上加标志 开放表和关闭表改用 Hash 表（不过如果采用在节点加标志的方法，好像 Hash 表就没有意义了，直接访问该节点标志判断处于哪种状态还快些。而且 Hash…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"A*的优化\",\n  \"date\": \"2006-04-11T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u6839\\u636E\\u300A\\u4EBA\\u5DE5\\u667A\\u80FD\\u6E38\\u620F\\u7F16\\u7A0B\\u771F\\u8A00\\u300B\\u7684\\u63D0\\u793A\\uFF0C\\u5206\\u522B\\u5C1D\\u8BD5\\u4E86\\u51E0\\u79CD\\u4F18\\u5316\\u65B9\\u5F0F\\uFF0C\\u6BD4\\u5982\\uFF1A\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u5728\\u8282\\u70B9\\u4E0A\\u52A0\\u6807\\u5FD7\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u5F00\\u653E\\u8868\\u548C\\u5173\\u95ED\\u8868\\u6539\\u7528 Hash \\u8868\\uFF08\\u4E0D\\u8FC7\\u5982\\u679C\\u91C7\\u7528\\u5728\\u8282\\u70B9\\u52A0\\u6807\\u5FD7\\u7684\\u65B9\\u6CD5\\uFF0C\\u597D\\u50CF Hash \\u8868\\u5C31\\u6CA1\\u6709\\u610F\\u4E49\\u4E86\\uFF0C\\u76F4\\u63A5\\u8BBF\\u95EE\\u8BE5\\u8282\\u70B9\\u6807\\u5FD7\\u5224\\u65AD\\u5904\\u4E8E\\u54EA\\u79CD\\u72B6\\u6001\\u8FD8\\u5FEB\\u4E9B\\u3002\\u800C\\u4E14 Hash \\u8868\\u7684\\u54C8\\u5E0C\\u51FD\\u6570\\u4E5F\\u662F\\u6BD4\\u8F83\\u96BE\\u9009\\u7684\\uFF0C\\u5982\\u679C\\u9009\\u4E0D\\u597D\\u6027\\u80FD\\u8FD8\\u8981\\u4E0B\\u964D\\uFF09\\u3001\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u5F00\\u653E\\u8868\\u6539\\u7528\\u94FE\\u8868\\uFF08\\u4E3B\\u8981\\u662F\\u52A0\\u5FEB\\u63D2\\u5165\\u548C\\u5220\\u9664\\u7684\\u901F\\u5EA6\\uFF0C\\u5F00\\u653E\\u8868\\u4E3B\\u8981\\u662F\\u8FD9\\u7C7B\\u64CD\\u4F5C\\uFF0C\\u5173\\u95ED\\u8868\\u4E3B\\u8981\\u662F\\u63D2\\u5165\\u548C\\u641C\\u7D22\\u64CD\\u4F5C\\uFF09\")), mdx(\"p\", null, \"\\u8FD9\\u4E09\\u79CD\\u65B9\\u6CD5\\uFF0C\\u4F46\\u662F\\u6548\\u679C\\u90FD\\u4E0D\\u662F\\u5F88\\u7406\\u60F3\\uFF0C\\u6027\\u80FD\\u57FA\\u672C\\u4E0A\\u6CA1\\u4EC0\\u4E48\\u63D0\\u5347\\uFF0C\\u4E0D\\u5F97\\u5DF2\\u6539\\u7528\\u6A21\\u677F\\u6765\\u91CD\\u65B0\\u5199 A\", \"*\", \"\\uFF0C\\u7ED3\\u679C\\u5927\\u51FA\\u610F\\u5916\\uFF0C\\u5C45\\u7136\\u63D0\\u9AD8\\u4E86 20 \\u500D\\uFF0C\\u8FD8\\u662F\\u4E0D\\u80FD\\u7406\\u89E3\\u600E\\u4E48\\u4F1A\\u8FD9\\u4E48\\u5FEB\\uFF1F\\uFF1F\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"A*的优化","date":"April 11, 2006","description":null}},"previous":{"fields":{"slug":"/2006/2006-04-06-singleton/"},"frontmatter":{"title":"关于单件模式（Singleton）"}},"next":{"fields":{"slug":"/2006/2006-04-11-cpp-template/"},"frontmatter":{"title":"模板有那么快么？？"}}},"pageContext":{"id":"c83713ea-6673-58e6-bf30-197c35f41f3e","previousPostId":"923423c0-c8b8-5adc-8ada-9b0e1bd4700a","nextPostId":"f6f35b03-9bcf-5e15-bd74-3803a92b01f2"}},"staticQueryHashes":["2841359383","916993862"]}