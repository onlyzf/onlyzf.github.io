{"componentChunkName":"component---src-templates-blog-post-js","path":"/2007/2007-08-22-vector-vs-list/","result":{"data":{"site":{"siteMetadata":{"title":"Fan's life"}},"markdownRemark":{"id":"19ea4f95-46d6-5f0e-ac95-691a6300f79d","excerpt":"Routine Name       Time with Children  Hit Count list::insert       109305010           100000 vector::insert     5643518264          100000 list::insert…","html":"<table>\n<thead>\n<tr>\n<th>Routine Name     </th>\n<th> Time with Children </th>\n<th>Hit Count</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>list::insert     </td>\n<td> 109305010          </td>\n<td>100000</td>\n</tr>\n<tr>\n<td>vector::insert   </td>\n<td> 5643518264         </td>\n<td>100000</td>\n</tr>\n<tr>\n<td>list::insert     </td>\n<td> 106637             </td>\n<td>100</td>\n</tr>\n<tr>\n<td>vector::insert   </td>\n<td> 103485             </td>\n<td>100</td>\n</tr>\n<tr>\n<td>list::erase      </td>\n<td> 51526581           </td>\n<td>100000</td>\n</tr>\n<tr>\n<td>vector::erase    </td>\n<td> 4967632494         </td>\n<td>100000</td>\n</tr>\n<tr>\n<td>list::erase      </td>\n<td> 39934              </td>\n<td>100</td>\n</tr>\n<tr>\n<td>vector::erase    </td>\n<td> 19352              </td>\n<td>100</td>\n</tr>\n<tr>\n<td>list::erase      </td>\n<td> 162914             </td>\n<td>400</td>\n</tr>\n<tr>\n<td>vector::erase    </td>\n<td> 149252             </td>\n<td>400</td>\n</tr>\n<tr>\n<td>list::erase      </td>\n<td> 209188             </td>\n<td>500</td>\n</tr>\n<tr>\n<td>vector::erase    </td>\n<td> 212181             </td>\n<td>500</td>\n</tr>\n</tbody>\n</table>\n<p>这是我拿 AQTime 做的一份性能测试，主要用于比较 vector 和 list 的性能，时间的单位是时钟周期。\n测试环境：CPU Core Duo T2300 双核，编译器 vc 8.0(vs2005)。</p>\n<p>两种数据结构的性能差异主要集中在 insert 和 erase 操作上，所以只比较了这两种操作。写法如下：</p>\n<p>1、vector 的插入和删除操作的都是中间的元素</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">vector<span class=\"token operator\">::</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>vector<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> vector<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>\nvector<span class=\"token operator\">::</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>vector<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> vector<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>2、list 插入和删除都是头部的元素</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">list<span class=\"token operator\">::</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>\nlist<span class=\"token operator\">::</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>结论：从性能测试中可以看出，</p>\n<ul>\n<li>在 100 个元素以内 vector 的 insert 性能比 list 高</li>\n<li>500 个元素以内 vector 的 erase 性能也比 list 高</li>\n<li>加上 list 的空间占用本来就比 vector 要高的多（使用内部类型的时候）、并且 vector 可以随机访问</li>\n</ul>\n<p>所以在一般的项目里 vector 是当仁不让的首选，请大家以后尽量使用 vector。</p>\n<p>PS：此测试虽然有一定的平台、编译器、stl 实现等依赖性，但是同样具有普遍性。</p>","frontmatter":{"title":"vector和list的性能比较","date":"August 22, 2007","description":null}},"previous":{"fields":{"slug":"/2006/2006-05-26-ace/"},"frontmatter":{"title":"计划用ACE写一个服务器"}},"next":{"fields":{"slug":"/2007/2007-08-22-journal/"},"frontmatter":{"title":"近日工作"}}},"pageContext":{"id":"19ea4f95-46d6-5f0e-ac95-691a6300f79d","previousPostId":"32b548d5-a523-5328-8ced-91ab0084d798","nextPostId":"14096a02-66ce-502b-9280-a9903545115f"}},"staticQueryHashes":["2841359383","916993862"]}