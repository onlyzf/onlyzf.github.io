{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/2007/2007-08-22-vector-vs-list/","result":{"data":{"site":{"siteMetadata":{"title":"Fan's life","social":[{"name":"github","url":"https://github.com/onlyzf"},{"name":"GitHub","url":"https://github.com/gatsbyjs"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"39f51676-e547-56ac-91bd-54302591ddb8","excerpt":"这是我拿 AQTime 做的一份性能测试，主要用于比较 vector 和 list 的性能，时间的单位是时钟周期。\n测试环境：CPU Core Duo T2300 双核，编译器 vc 8.0(vs2005)。 两种数据结构的性能差异主要集中在 insert 和 erase…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"vector和list的性能比较\",\n  \"date\": \"2007-08-22T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Routine Name\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 Time with Children\\xA0 Hit Count\\nlist::insert\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0109305010\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0100000\\nvector::insert\\xA0\\xA0\\xA0\\xA0\\xA0\\xA05643518264\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0100000\\nlist::insert\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 106637\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 100\\nvector::insert\\xA0\\xA0\\xA0\\xA0\\xA0 103485\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 100\\nlist::erase\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 51526581\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 100000\\nvector::erase\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 4967632494\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 100000\\nlist::erase\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 39934\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 100\\nvector::erase\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 19352\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 100\\nlist::erase\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 162914\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 400\\nvector::erase\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 149252\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 400\\nlist::erase\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 209188\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 500\\nvector::erase\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 212181\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 500\\n\")), mdx(\"p\", null, \"\\u8FD9\\u662F\\u6211\\u62FF AQTime \\u505A\\u7684\\u4E00\\u4EFD\\u6027\\u80FD\\u6D4B\\u8BD5\\uFF0C\\u4E3B\\u8981\\u7528\\u4E8E\\u6BD4\\u8F83 vector \\u548C list \\u7684\\u6027\\u80FD\\uFF0C\\u65F6\\u95F4\\u7684\\u5355\\u4F4D\\u662F\\u65F6\\u949F\\u5468\\u671F\\u3002\\n\\u6D4B\\u8BD5\\u73AF\\u5883\\uFF1ACPU Core Duo T2300 \\u53CC\\u6838\\uFF0C\\u7F16\\u8BD1\\u5668 vc 8.0(vs2005)\\u3002\"), mdx(\"p\", null, \"\\u4E24\\u79CD\\u6570\\u636E\\u7ED3\\u6784\\u7684\\u6027\\u80FD\\u5DEE\\u5F02\\u4E3B\\u8981\\u96C6\\u4E2D\\u5728 insert \\u548C erase \\u64CD\\u4F5C\\u4E0A\\uFF0C\\u6240\\u4EE5\\u53EA\\u6BD4\\u8F83\\u4E86\\u8FD9\\u4E24\\u79CD\\u64CD\\u4F5C\\u3002\\u5199\\u6CD5\\u5982\\u4E0B\\uFF1A\"), mdx(\"p\", null, \"1\\u3001vector \\u7684\\u63D2\\u5165\\u548C\\u5220\\u9664\\u64CD\\u4F5C\\u7684\\u90FD\\u662F\\u4E2D\\u95F4\\u7684\\u5143\\u7D20\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-c++\"\n  }), \"vector::insert(vector.begin() + vector.size() / 2, int)\\nvector::erase(vector.begin() + vector.size() / 2)\\n\")), mdx(\"p\", null, \"2\\u3001list \\u63D2\\u5165\\u548C\\u5220\\u9664\\u90FD\\u662F\\u5934\\u90E8\\u7684\\u5143\\u7D20\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-c++\"\n  }), \"list::insert(list.begin(), int)\\nlist::erase(list.begin())\\n\")), mdx(\"p\", null, \"\\u7ED3\\u8BBA\\uFF1A\\u4ECE\\u6027\\u80FD\\u6D4B\\u8BD5\\u4E2D\\u53EF\\u4EE5\\u770B\\u51FA\\uFF0C\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u5728 100 \\u4E2A\\u5143\\u7D20\\u4EE5\\u5185 vector \\u7684 insert \\u6027\\u80FD\\u6BD4 list \\u9AD8\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"500 \\u4E2A\\u5143\\u7D20\\u4EE5\\u5185 vector \\u7684 erase \\u6027\\u80FD\\u4E5F\\u6BD4 list \\u9AD8\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u52A0\\u4E0A list \\u7684\\u7A7A\\u95F4\\u5360\\u7528\\u672C\\u6765\\u5C31\\u6BD4 vector \\u8981\\u9AD8\\u7684\\u591A\\uFF08\\u4F7F\\u7528\\u5185\\u90E8\\u7C7B\\u578B\\u7684\\u65F6\\u5019\\uFF09\\u3001\\u5E76\\u4E14 vector \\u53EF\\u4EE5\\u968F\\u673A\\u8BBF\\u95EE\")), mdx(\"p\", null, \"\\u6240\\u4EE5\\u5728\\u4E00\\u822C\\u7684\\u9879\\u76EE\\u91CC vector \\u662F\\u5F53\\u4EC1\\u4E0D\\u8BA9\\u7684\\u9996\\u9009\\uFF0C\\u8BF7\\u5927\\u5BB6\\u4EE5\\u540E\\u5C3D\\u91CF\\u4F7F\\u7528 vector\\u3002\"), mdx(\"p\", null, \"PS\\uFF1A\\u6B64\\u6D4B\\u8BD5\\u867D\\u7136\\u6709\\u4E00\\u5B9A\\u7684\\u5E73\\u53F0\\u3001\\u7F16\\u8BD1\\u5668\\u3001stl \\u5B9E\\u73B0\\u7B49\\u4F9D\\u8D56\\u6027\\uFF0C\\u4F46\\u662F\\u540C\\u6837\\u5177\\u6709\\u666E\\u904D\\u6027\\u3002\"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/2007/2007-08-22-vector-vs-list/","title":"vector和list的性能比较","tags":[],"date":"August 22, 2007","image":null,"imageAlt":null,"socialImage":null},"previous":{"__typename":"MdxBlogPost","id":"6f3b3464-4fc8-5480-8281-405f6c84cdfe","excerpt":"这几天终于可以趁着机器人需求比较丰富的时候重构一下整个机器人了。大的东西没有变，但是基于 timer 性能的缘故，把 stopwatch 从 timer 里面移出来，否则每个周期的大部分时间都被 stopwatch 占去了，很划不来。另外，对于比较新的需求增加了几个行为，i…","slug":"/2007/2007-08-22-journal/","title":"近日工作","date":"August 22, 2007"},"next":{"__typename":"MdxBlogPost","id":"5402f9ef-914b-53b7-bd1c-389526a3f197","excerpt":"新设计的机器人框架的思路是这样的： 一共两个线程，UI 线程，逻辑线程； UI 线程为主线程，可能从 WinMain 开始执行； 逻辑线程为驻线程创建的独立线程，运行 Dispatcher 的 Update； UI 线程持有逻辑线程的句柄，当执行 UI…","slug":"/2007/2007-12-07-robot/","title":"关于机器人框架的设计","date":"December 07, 2007"}},"pageContext":{"id":"39f51676-e547-56ac-91bd-54302591ddb8","previousId":"6f3b3464-4fc8-5480-8281-405f6c84cdfe","nextId":"5402f9ef-914b-53b7-bd1c-389526a3f197","maxWidth":1380}},"staticQueryHashes":["2744905544","3090755652","386998304","764694655"]}