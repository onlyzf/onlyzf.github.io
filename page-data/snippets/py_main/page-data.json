{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/snippets/py_main/","result":{"data":{"site":{"siteMetadata":{"title":"Fan's life","social":[{"name":"github","url":"https://github.com/onlyzf"},{"name":"GitHub","url":"https://github.com/gatsbyjs"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"5f4a3183-b3b6-5d22-bc79-11cc58c90601","excerpt":"from  Defining Main Functions in Python Summary of Python Main Function Best Practices Here are four key best practices about main() in…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Defining Main Functions in Python\",\n  \"date\": \"2019-08-28T17:00:00.000Z\",\n  \"description\": \"Summary of Python Main Function Best Practices!\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://realpython.com/python-main-function/\"\n  }), \"Defining Main Functions in Python\")), mdx(\"h2\", {\n    \"id\": \"summary-of-python-main-function-best-practices\"\n  }, \"Summary of Python Main Function Best Practices\"), mdx(\"p\", null, \"Here are four key best practices about main() in Python that you just saw:\"), mdx(\"p\", null, \"Put code that takes a long time to run or has other effects on the computer in a function or class, so you can control exactly when that code is executed.\"), mdx(\"p\", null, \"Use the different values of \", \"_\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"_\", \"name\", \"_\", \"_\"), \" to determine the context and change the behavior of your code with a conditional statement.\"), mdx(\"p\", null, \"You should name your entry point function main() in order to communicate the intention of the function, even though Python does not assign any special significance to a function named main().\"), mdx(\"p\", null, \"If you want to reuse functionality from your code, define the logic in functions outside main() and call those functions within main().\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"from time import sleep\\n\\nprint(\\\"This is my file to demonstrate best practices.\\\")\\n\\ndef process_data(data):\\n    print(\\\"Beginning data processing...\\\")\\n    modified_data = data + \\\" that has been modified\\\"\\n    sleep(3)\\n    print(\\\"Data processing finished.\\\")\\n    return modified_data\\n\\ndef read_data_from_web():\\n    print(\\\"Reading data from the Web\\\")\\n    data = \\\"Data from the web\\\"\\n    return data\\n\\ndef write_data_to_database(data):\\n    print(\\\"Writing data to a database\\\")\\n    print(data)\\n\\ndef main():\\n    data = read_data_from_web()\\n    modified_data = process_data(data)\\n    write_data_to_database(modified_data)\\n\\nif __name__ == \\\"__main__\\\":\\n    main()\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/snippets/py_main/","title":"Defining Main Functions in Python","tags":[],"date":"August 28, 2019","image":null,"imageAlt":null,"socialImage":null},"previous":{"__typename":"MdxBlogPost","id":"e4ab53fa-aa67-5049-9646-93bd4ffe9107","excerpt":"B 当我们有单个任务要做的时候，情况还比较简单；当我们有很多任务要做时，计划可以很好地帮助我们清除地知道各种任务及它们需要的时间，严格按照计划执行，可充分利用你的时间。\n时间银行每天给你 8640…","slug":"/2019/time/","title":"城市创变者挑战赛——时光侦探","date":"August 18, 2019"},"next":{"__typename":"MdxBlogPost","id":"cd775d15-2231-56ec-a10e-c24fdf7fc374","excerpt":"…","slug":"/2019/strategy/strategy/","title":"企业发展战略思考","date":"January 01, 2020"}},"pageContext":{"id":"5f4a3183-b3b6-5d22-bc79-11cc58c90601","previousId":"e4ab53fa-aa67-5049-9646-93bd4ffe9107","nextId":"cd775d15-2231-56ec-a10e-c24fdf7fc374","maxWidth":1380}},"staticQueryHashes":["2744905544","3090755652","386998304","764694655"]}