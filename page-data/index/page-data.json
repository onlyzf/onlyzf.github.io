{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Fan's life"}},"allMarkdownRemark":{"nodes":[{"excerpt":"Sample Repository The Actual Module Location ./sample/ or ./sample.py Your module package is the core focus of the repository. It should not…","fields":{"slug":"/snippets/py_struct/"},"frontmatter":{"date":"November 05, 2020","title":"Structure of the Python Repository","description":null}},{"excerpt":"…","fields":{"slug":"/2019/strategy/strategy/"},"frontmatter":{"date":"January 01, 2020","title":"企业发展战略思考","description":null}},{"excerpt":"from Defining Main Functions in Python Summary of Python Main Function Best Practices Here are four key best practices about main() in…","fields":{"slug":"/snippets/py_main/"},"frontmatter":{"date":"August 28, 2019","title":"Defining Main Functions in Python","description":"Summary of Python Main Function Best Practices!"}},{"excerpt":"B 当我们有单个任务要做的时候，情况还比较简单；当我们有很多任务要做时，计划可以很好地帮助我们清除地知道各种任务及它们需要的时间，严格按照计划执行，可充分利用你的时间。\n时间银行每天给你 8640…","fields":{"slug":"/2019/time/"},"frontmatter":{"date":"August 18, 2019","title":"城市创变者挑战赛——时光侦探","description":"你是否常常觉得明明一整天什么也没做，时间却不经意地来到午夜十二点了呢? 有人说，7年是人生一个轮回。你是否尝试过将每一天浪费的时间，叠加到7年呢？如果你每天都花2小时刷微信朋友圈，7年所花费的就是 2(hr)X365(天)X7(年)=5110小时，这样的数字是否很惊人呢? 现在请你扮演时光侦探，找出是谁偷走了你的时间吧!"}},{"excerpt":"B…","fields":{"slug":"/2019/bicycle/"},"frontmatter":{"date":"August 17, 2019","title":"城市创变者挑战赛——单车的隐患","description":"请找到一个待解决的社会或社区问题，发挥你的创造力，设计一个解决或改进现状的方案，并实施它，收集反馈。"}},{"excerpt":"W…","fields":{"slug":"/2019/dream/"},"frontmatter":{"date":"August 16, 2019","title":"城市创变者挑战赛——曾经的梦想","description":"每个人都有自己的梦想，却不是每个人都有机会实现它。而对于梦想的遗憾，可能会影响我们与家人的关系。 请以记者的身份，采访你的父亲或母亲，了解他们没有实现的梦想。"}},{"excerpt":"F 如果我明天就要死去，我希望能不影响任何人悄悄的离开，不用有任何的葬礼，也不用专门通知大家。在我的朋友圈写一句“2019 年 8 月 17 日 Fan…","fields":{"slug":"/2019/death/"},"frontmatter":{"date":"August 16, 2019","title":"城市创变者挑战赛——向死而生","description":"人们很少主动思考死亡，直到有一天死神突然降临，才追悔莫及。 假如明天你就要死去，请给自己策划一场葬礼，写下你对自己人生的评价，和在葬礼上想跟家人或朋友说的话，分享给他们，倾听他们的想法。"}},{"excerpt":"B 这次我们做的任务叫“存在的意义”，要采访…","fields":{"slug":"/2019/meaning_of_life/"},"frontmatter":{"date":"August 15, 2019","title":"城市创变者挑战赛——存在的意义","description":"人的一生，总是在不断重新认识自己，找寻人生的使命与价值 。 请找到至少五位路人，问他们这三个问题： 1. 你的人生使命和价值是什么？ 2. 你认为自己能为身边人带来什么影响？ 3. 你想为成都带来什么影响？"}},{"excerpt":"B…","fields":{"slug":"/2019/trash/"},"frontmatter":{"date":"August 15, 2019","title":"城市创变者挑战赛——垃圾卫士","description":"人类每天会产生大量的垃圾，如果这些垃圾不经分类而被处理，会造成严重的环境污染和资源浪费。 请先了解一下垃圾不分类的危害，以及成都的垃圾分类政策。 去街上或社区溜一圈，记下乱扔垃圾或不恰当使用垃圾箱的情况。 请找到一个人流量大的垃圾箱（可以是景点附近的，也可以是社区里的），发挥你的想象力，向前来使用这个垃圾箱的人有效传达成都垃圾分类的政策吧！"}},{"excerpt":"BB…","fields":{"slug":"/2019/do_good/"},"frontmatter":{"date":"August 14, 2019","title":"城市创变者挑战赛——日行一善","description":"改变世界不是一个人做很多，而是每个人都做一点点。只要你愿意付出行动，主动做善事，用你的真心去感化身边人，这个世界就会因你而变得不一样。 请尝试连续3天，每天做一件小善事，用视频记录，回家后写下日记，记录这件善事和自己的感想。"}},{"excerpt":"B…","fields":{"slug":"/2019/geeklife/"},"frontmatter":{"date":"August 13, 2019","title":"城市创变者挑战赛——长辈的黑客生活","description":"随着全球科技的快速发展，现代人的生活被快速的改变和颠覆。我们习惯了周围事物的频繁更新，享受着科技进步给我们生活带来的好处。然而对于我们的一些长辈来说，接受新鲜事物却不是那么“理所当然”。 请找到一位你的长辈，采访TA日常生活中有哪些不便，并用现代科技的手段帮助他解决问题。"}},{"excerpt":"WW…","fields":{"slug":"/2019/blind_dumb/"},"frontmatter":{"date":"August 13, 2019","title":"城市创变者挑战赛——盲人与哑巴","description":"请尝试一人扮演盲人（带眼罩），一人扮演哑巴，一人扮演守护者，用这样的模式共度1.5个小时（每30分钟互换一次角色，每个人需要体验3个角色） 请前往浣花溪公园寻宝（具体内容天使导师当天通知），在这个过程中完成走盲道、坐公交、买水果、吃饭等活动。 请守护者记录下挑战过程中你们发现的对残障人友好和不友好的设施或服务。"}},{"excerpt":"WW 迟到的感谢感想：我们的社会能如此和谐，少不了各行各业的社会服务者。我们团队边走边找目标，很快发现了警察、交通指挥员、快递员、公交司机、河道清洁工等目标人物。经过简单的交流，每个职业每天的工作时间都很长，短的八小时，长的竟然长达 1…","fields":{"slug":"/2019/thanks/"},"frontmatter":{"date":"August 13, 2019","title":"城市创变者挑战赛——迟到的感谢","description":"我们的社会能够正常运转，依赖于许多默默为我们付出的人，如警察、清洁工、公交司机等。 请找到5个为城市正常运转默默付出的职业，用你的方式，对从事这样职业的人表示感谢吧！"}},{"excerpt":"WW 成都七十年感想：今年是建国 70 周年，我是一个把成都作为第二故乡的朋友，来到成都已经 21 周年，来到了这座“来了，就走不脱的城市”。虽然不及 70 年那么有沧桑感，但还是很深刻的感受到成都翻天覆地的变化。经常带孩子在峨影看电影，在接到这个任务后，想到通过对比峨影的 6…","fields":{"slug":"/2019/cd70/"},"frontmatter":{"date":"August 12, 2019","title":"城市创变者挑战赛——成都70年","description":"培根说：“读史使人明智”。定期回顾过去，能够帮助我们更好的展望未来。 今年是建国70周年纪念，在过去70年中，我们的生活发生了翻天覆地的变化。这些变化给我们什么启示？ 请锁定一个成都的目标，可以是一个人、一件物品、一栋房子或是一个机构，挖掘和采访这个目标过去70年的变化。"}},{"excerpt":"SRE 方法论 确保长期关注研发工作 Google 将 SRE 团队的运维工作限制在 50%以内。 SRE 处理运维工作的一项准则是：在每 8-12 小时的 on-call…","fields":{"slug":"/2019/sre/"},"frontmatter":{"date":"July 13, 2019","title":"《SRE Google运维解密》","description":"《SRE Google 运维解密》读书笔记"}},{"excerpt":"docker enable debug in container","fields":{"slug":"/snippets/container/"},"frontmatter":{"date":"June 17, 2019","title":"容器及编排","description":null}},{"excerpt":"Docker 项目的目标是实现轻量级的操作系统虚拟化解决方案。 Docker 的基础是 Linux 容器（LXC）等技术。 在 LXC 的基础上 Docker 进行了进一步的封装，让用户不需要去关心容器的管理，使得操作更为简便。用户操作 Docker…","fields":{"slug":"/2019/docker/"},"frontmatter":{"date":"May 05, 2019","title":"《Docker —— 从入门到实践》","description":"《Docker —— 从入门到实践》读书笔记"}},{"excerpt":"…","fields":{"slug":"/2018/2018-10-30-game-development/"},"frontmatter":{"date":"October 30, 2018","title":"Game Development","description":null}},{"excerpt":"设计模式、游戏开发中的实践 系统架构设计师指引 云计算概念、分布式系统、高可用系统 https://www.coursera.org/learn/cloud-computing https://coolshell.cn/articles/10910.html https…","fields":{"slug":"/2018/topic/"},"frontmatter":{"date":"October 20, 2018","title":"可分享的主题","description":null}},{"excerpt":"Flushing your DNS cache on Mac OS X Show listen ports Bluetooth Devices Not Connecting to OSX Solution: Delete com.apple.Bluetooth.plist…","fields":{"slug":"/snippets/macOS/"},"frontmatter":{"date":"October 20, 2018","title":"macOS","description":null}},{"excerpt":"How to Check Domain’s Nameservers How to check DNS record chinadns","fields":{"slug":"/snippets/dns/"},"frontmatter":{"date":"October 20, 2018","title":"DNS","description":null}},{"excerpt":"Supervisor is a client/server system that allows its users to monitor and control a number of processes on UNIX-like operating systems…","fields":{"slug":"/snippets/supervisor/"},"frontmatter":{"date":"October 19, 2018","title":"极简Supervisor","description":null}},{"excerpt":"","fields":{"slug":"/snippets/git/"},"frontmatter":{"date":"October 13, 2018","title":"Git snippets","description":null}},{"excerpt":"~/.ssh/config","fields":{"slug":"/snippets/ssh/"},"frontmatter":{"date":"October 13, 2018","title":"SSH config","description":null}},{"excerpt":"Create a new directory under version control","fields":{"slug":"/snippets/svn/"},"frontmatter":{"date":"October 13, 2018","title":"Subversion snippets","description":null}},{"excerpt":"","fields":{"slug":"/snippets/spring-config-server/"},"frontmatter":{"date":"June 13, 2018","title":"Spring Config Server","description":null}},{"excerpt":"Compiler Options We strongly recommend compiling with at least the following warning options: Recent versions of gcc also support an option…","fields":{"slug":"/snippets/cc/"},"frontmatter":{"date":"April 01, 2018","title":"GCC","description":null}},{"excerpt":"Focus on one major idea. Give people a reason to care. Build your idea with familiar concepts. Make your idea worth sharing.","fields":{"slug":"/2017/2017-05-09-how-to-speech/"},"frontmatter":{"date":"May 09, 2017","title":"TED's secret to great public speaking","description":null}},{"excerpt":"长达 25 年的经验教训一：快速发布，短发布周期很重要 长达 25 年的经验教训二：流程的扩展性需要分布式层级状的开发模式，全靠 Linus 一个会死人，职责分工明确才能提高效率 长达 25 年的经验教训三：工具很重要，迁移到 BitKeeper…","fields":{"slug":"/2016/2016-09-19-linux/"},"frontmatter":{"date":"September 19, 2016","title":"Linux开发经验教训——来自《Linux 内核开发报告2016版》","description":null}},{"excerpt":"简介 功夫小子是一款多人格斗竞技游戏，无成长，游戏中可切换武器，强调武器平衡及个人技术\n\n 开发：盛大成都研发 运营：盛大上海（后转入成都锦天） 上线时间：2007 年 运营状态：alive…","fields":{"slug":"/2015/2015-03-04-kk/"},"frontmatter":{"date":"March 04, 2015","title":"功夫小子运营","description":null}},{"excerpt":"哲学 Story is king 最小的代价决定是否继续走下一步。 方法 idea script story board 2d 90 min movie 3d 90 min movie","fields":{"slug":"/2014/2014-03-27-pixar/"},"frontmatter":{"date":"March 27, 2014","title":"Pixar的哲学和方法","description":null}},{"excerpt":"…","fields":{"slug":"/2013/2013-11-30-pm/"},"frontmatter":{"date":"November 30, 2013","title":"项目管理思考","description":null}},{"excerpt":"我的电脑还没连网，也想过要和 Internet…","fields":{"slug":"/2010/2010-09-16-internet/"},"frontmatter":{"date":"September 16, 2010","title":"【转】从Internet说起——王小波","description":null}},{"excerpt":"新设计的机器人框架的思路是这样的： 一共两个线程，UI 线程，逻辑线程； UI 线程为主线程，可能从 WinMain 开始执行； 逻辑线程为驻线程创建的独立线程，运行 Dispatcher 的 Update； UI 线程持有逻辑线程的句柄，当执行 UI…","fields":{"slug":"/2007/2007-12-07-robot/"},"frontmatter":{"date":"December 07, 2007","title":"关于机器人框架的设计","description":null}},{"excerpt":"Routine Name       Time with Children  Hit Count list::insert       109305010           100000 vector::insert     5643518264          10000…","fields":{"slug":"/2007/2007-08-22-vector-vs-list/"},"frontmatter":{"date":"August 22, 2007","title":"vector和list的性能比较","description":null}},{"excerpt":"这几天终于可以趁着机器人需求比较丰富的时候重构一下整个机器人了。大的东西没有变，但是基于 timer 性能的缘故，把 stopwatch 从 timer 里面移出来，否则每个周期的大部分时间都被 stopwatch 占去了，很划不来。另外，对于比较新的需求增加了几个行为，i…","fields":{"slug":"/2007/2007-08-22-journal/"},"frontmatter":{"date":"August 22, 2007","title":"近日工作","description":null}},{"excerpt":"既然已经有现成的很成熟的 ACE 库了，就不要搞什么完成端口模型需要耗费大量时间的网络编程了。在 ACE 的基础上写服务器应该不错。 考虑到扩展性，打算分成两层，一层基本服务，直接使用 ACE…","fields":{"slug":"/2006/2006-05-26-ace/"},"frontmatter":{"date":"May 26, 2006","title":"计划用ACE写一个服务器","description":null}},{"excerpt":"经过了几天的测试，排除了几个小 Bug，现在的算法已经是很稳定了。性能大概是以前的三倍左右，最终的结果是只用上了设置状态的优化方法，其他方法都没用到。 之前会快 20 倍是因为新算法忘了做 clear，加上以后就是现在这个样子，大概是以前…","fields":{"slug":"/2006/2006-04-17-astar/"},"frontmatter":{"date":"April 17, 2006","title":"终于明白了为什么新写的A*算法会快那么多","description":null}},{"excerpt":"根据《人工智能游戏编程真言》的提示，分别尝试了几种优化方式，比如： 在节点上加标志 开放表和关闭表改用 Hash 表（不过如果采用在节点加标志的方法，好像 Hash 表就没有意义了，直接访问该节点标志判断处于哪种状态还快些。而且 Hash…","fields":{"slug":"/2006/2006-04-11-astar/"},"frontmatter":{"date":"April 11, 2006","title":"A*的优化","description":null}},{"excerpt":"前几天用 C++模板重写了一遍 A*算法，实现的内容和非模板的算法一模一样，做了一下性能测试居然比非模板算法快 20 倍。太不可思议了，不能理解，看来看去两个算法都是一样的呀，难道真的是模板造成的？？据说模板的效率主要和编译器有关系，我用的编译器是 VC…","fields":{"slug":"/2006/2006-04-11-cpp-template/"},"frontmatter":{"date":"April 11, 2006","title":"模板有那么快么？？","description":null}},{"excerpt":"…","fields":{"slug":"/2006/2006-04-06-buckets-effect/"},"frontmatter":{"date":"April 06, 2006","title":"【转】谈论木桶理论新论","description":null}},{"excerpt":"《设计模式》上关于单件的定义和实现如下： 由于 Instance…","fields":{"slug":"/2006/2006-04-06-singleton/"},"frontmatter":{"date":"April 06, 2006","title":"关于单件模式（Singleton）","description":null}},{"excerpt":"在学习敏捷的时候听到结对编程这个概念，昨天和 water 实践了一下，确实有比较好的效果，就好像手把手的教你，而且一个人编程，另一个人可以查错，还可以思考很多问题，很好的方式。但是不知道效率如何。起码 water 的速度是很快的，我有点儿跟不上他。","fields":{"slug":"/2005/2005-05-09-try-pairs/"},"frontmatter":{"date":"May 09, 2005","title":"体验结对","description":null}},{"excerpt":"有一个笔记本放在面前，随时记录想法。 中午最好能趴 10 分钟，效果很好。但是不能在床上睡。","fields":{"slug":"/2005/2005-04-26-working-ideas/"},"frontmatter":{"date":"April 26, 2005","title":"工作心得","description":null}}]}},"pageContext":{}},"staticQueryHashes":["2841359383","916993862"]}